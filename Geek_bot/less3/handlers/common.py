from aiogram import types, F,Router
from aiogram.filters.command import Command
# import sys
# sys.path.insert(1,"less3/keyboards")
# sys.path.insert(1,"less3/utils")

from less3.keyboards.keyboard import kb1, kb2
from less3.utils.func import fox, quote, emoji

router = Router()

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command('start'))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}', reply_markup=kb1)

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@router.message(Command('stop'))
async def cmd_stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü–æ–∫–∞, {name}')

@router.message(F.text.lower() == '–∏–Ω—Ñ–æ')
@router.message(F.text.lower() == 'info')
@router.message(Command('info'))
async def cmd_info(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–±–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –∏ –æ—Ç–≤–∏—á–∞–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—à–∏–µ —Å–ª–æ–≤–∞ (–ø—Ä–∏–≤–µ—Ç,\n–ø–æ–∫–∞,\n–ª–∏—Å–∞,\nfox,\nquote,\n—Ü–∏—Ç–∞—Ç—ã –∏–∑ –∞–Ω–∏–º–µ,\nquotes from anime,\n—ç–º–æ–¥–∑–∏,\nemoji)')

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@router.message(Command('fox'))
@router.message(Command('–ª–∏—Å–∞'))
@router.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É')
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f'–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}')
    await message.answer_photo(photo=img_fox)
  
@router.message(Command('quote'))
@router.message(Command('—Ü–∏—Ç–∞—Ç—ã'))
@router.message(F.text.lower() == '–¶–∏—Ç–∞—Ç—ã ')
async def cmd_quote(message: types.Message):
    result = quote()
    character = result["character"]
    quote_text = result["quote"]
    anime_name = result["anime"]
    await message.answer(f"Anime - {anime_name},\ncharacter - {character},\nQuote - {quote_text}")
    
@router.message(Command('emoji'))
@router.message(Command('—ç–º–æ–¥–∑–∏'))
async def cmd_emoji(message: types.Message):
    name = message.chat.first_name
    result = emoji()

    for code in result.get('htmlCode'):
        await message.answer(code,parse_mode="html")
    # await bot.send_photo(message.from_user.id, photo=img_fox)

# @router.message(Command("–±—Ä–æ—Å—å –∫–æ—Å—Ç—å"))
# async def cmd_dice(message: types.Message):

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–ø–∏—Å

#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ù—É-–ø—Ä–∏–≤–µ—Ç, {name}')
    elif 'start' in msg_user:
        await message.answer(f'start, {name}')
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(f'–ü–æ–∫–∞-–ø–æ–∫–∞, {name}')
    elif '–±—Ä–æ—Å—å –∫–æ—Å—Ç—å' in msg_user:
        await message.answer_dice(emoji="üé≤")
    elif '–ª–∏—Å–∞' in msg_user or  "fox" in msg_user:
        await message.answer(f'–°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å, {name}', reply_markup=kb2)
    elif '—Ü–∏—Ç–∞—Ç—ã –∏–∑ –∞–Ω–∏–º–µ' in msg_user or  "quotes from anime" in msg_user or  '—Ü–∏—Ç–∞—Ç—ã' in msg_user  or  'quote' in msg_user :
    # elif F.text.lower() in ('quote', '—Ü–∏—Ç–∞—Ç—ã', '—Ü–∏—Ç–∞—Ç—ã –∏–∑ –∞–Ω–∏–º–µ',"quotes from anime"):
        result = quote()
        character = result["character"]
        quote_text = result["quote"]
        anime_name = result["anime"]
        await message.answer(f"Anime - {anime_name},\ncharacter - {character},\nQuote - {quote_text}")
    elif 'emoji' in msg_user or  "—ç–º–æ–¥–∑–∏" in msg_user:
            result = emoji()
            for code in result.get('htmlCode'):
                await message.answer(code,parse_mode="html")
    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞!!!!')